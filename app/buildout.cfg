# buildout.cfg file for Plone 4 development work
# - for production installations please use http://plone.org/download
# Each part has more information about its recipe on PyPi
# http://pypi.python.org/pypi 
# ... just reach by the recipe name
[buildout]
download-cache = ${buildout:directory}/downloads
parts =  
    lxml
    instance
    instance1
    zopepy
    i18ndude
    zopeskel
    test
#    omelette

extends = 
    http://dist.plone.org/release/4.1.3/versions.cfg
    http://good-py.appspot.com/release/plone.app.theming/1.0

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.1.3
    http://dist.plone.org/thirdparty

extensions = 
    mr.developer
#    buildout.dumppickedversions

sources = sources

versions = versions

# Reference any folders where you have Python egg source code under development here 
# e.g.: develop = src/my.package
# If you are using the mr.developer extension and have the source code in a 
# repository mr.developer will handle this automatically for you
develop =


# Create bin/instance command to manage Zope start up and shutdown
[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
effective-user = adminsite
http-address = 8081
debug-mode = off
verbose-security = off
environment-vars =
                zope_i18n_compile_mo_files true
rel-storage =
    type mysql
    host ????
    db ???
    user ????
    passwd ????
    shared-blob-dir off
    blob-dir ${buildout:directory}/var/blobstorage

# Configuracao do memcache
    cache-servers 127.0.0.1:11211
    cache-module-name memcache
    cache-prefix db_plonesiteversao413

eggs =
    plone.reload
    plone.app.caching
    plone.app.theming
    quintagroup.dropdownmenu == 1.2.9
    quintagroup.portlet.cumulus == 1.2
    sc.social.like == 1.0.1
    faulthandler
    Pillow == 1.7.5
    Plone
    MySQL-python
    Relstorage
    python-memcached
    plone.app.ldap

products =
    ${buildout:directory}/products


# Some pre-Plone 3.3 packages may need you to register the package name here in 
# order their configure.zcml to be run (http://plone.org/products/plone/roadmap/247)
# - this is never required for packages in the Products namespace (Products.*)
zcml =
    quintagroup.portlet.cumulus

[instance1]
recipe = collective.recipe.zope2cluster
instance-clone = instance
http-address = 0.0.0.0:8082


# zopepy commands allows you to execute Python scripts using a PYTHONPATH 
# including all the configured eggs
[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

# create bin/i18ndude command
[i18ndude]
unzip = true
recipe = zc.recipe.egg
eggs = i18ndude

# create bin/test command
[test]
recipe = zc.recipe.testrunner
defaults = ['--auto-color', '--auto-progress']
eggs =
    ${instance:eggs}

# create ZopeSkel and paster commands with dexterity support
[zopeskel]
recipe = zc.recipe.egg
eggs =
    ZopeSkel
    PasteScript
    zopeskel.dexterity

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml == ${versions:lxml}

[command]
recipe = plone.recipe.command
command = 
        echo "import sys; sys.setdefaultencoding('utf-8')" > ${buildout:directory}/../lib/python2.7/site-packages/sitecustomize.py

# symlinks all Python source code to parts/omelette folder when buildout is run
# windows users will need to install additional software for this part to build 
# correctly.  See http://pypi.python.org/pypi/collective.recipe.omelette for
# relevant details.
# [omelette]
# recipe = collective.recipe.omelette
# eggs = ${instance:eggs}

# Put your mr.developer managed source code repositories here, see
# http://pypi.python.org/pypi/mr.developer for details on the format of
# this part
[sources]
#collective.developermanual = git git://github.com/collective/collective.developermanual.git

# Version pindowns for new style products go here - this section extends one 
# provided in http://dist.plone.org/release/
[versions]
